Grammar

    0 $accept: prog $end

    1 prog: %empty
    2     | prog line

    3 line: identifier ':'
    4     | identifier '=' integer
    5     | instruction
    6     | timecode instruction
    7     | error EOL
    8     | line EOL

    9 instruction: opcode ';'
   10            | opcode operands ';'

   11 timecode: integer

   12 operands: lvalue ',' operand
   13         | operand

   14 operand: value
   15        | lvalue

   16 lvalue: register
   17       | channel
   18       | '(' register ')'

   19 channel: CHANNEL value

   20 register: REGISTER value

   21 opcode: identifier

   22 value: integer
   23      | identifier

   24 integer: INT

   25 identifier: ID


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 18
    ')' (41) 18
    ',' (44) 12
    ':' (58) 3
    ';' (59) 9 10
    '=' (61) 4
    error (256) 7
    ID (258) 25
    INT (259) 24
    EOL (260) 7 8
    CHANNEL (261) 19
    REGISTER (262) 20


Nonterminals, with rules where they appear

    $accept (14)
        on left: 0
    prog (15)
        on left: 1 2
        on right: 0 2
    line (16)
        on left: 3 4 5 6 7 8
        on right: 2 8
    instruction (17)
        on left: 9 10
        on right: 5 6
    timecode (18)
        on left: 11
        on right: 6
    operands (19)
        on left: 12 13
        on right: 10
    operand (20)
        on left: 14 15
        on right: 12 13
    lvalue (21)
        on left: 16 17 18
        on right: 12 15
    channel (22)
        on left: 19
        on right: 17
    register (23)
        on left: 20
        on right: 16 18
    opcode (24)
        on left: 21
        on right: 9 10
    value (25)
        on left: 22 23
        on right: 14 19 20
    integer (26)
        on left: 24
        on right: 4 11 22
    identifier (27)
        on left: 25
        on right: 3 4 21 23


State 0

    0 $accept: . prog $end

    $default  reduce using rule 1 (prog)

    prog  go to state 1


State 1

    0 $accept: prog . $end
    2 prog: prog . line

    $end   shift, and go to state 2
    error  shift, and go to state 3
    ID     shift, and go to state 4
    INT    shift, and go to state 5

    line         go to state 6
    instruction  go to state 7
    timecode     go to state 8
    opcode       go to state 9
    integer      go to state 10
    identifier   go to state 11


State 2

    0 $accept: prog $end .

    $default  accept


State 3

    7 line: error . EOL

    EOL  shift, and go to state 12


State 4

   25 identifier: ID .

    $default  reduce using rule 25 (identifier)


State 5

   24 integer: INT .

    $default  reduce using rule 24 (integer)


State 6

    2 prog: prog line .
    8 line: line . EOL

    EOL  shift, and go to state 13

    $default  reduce using rule 2 (prog)


State 7

    5 line: instruction .

    $default  reduce using rule 5 (line)


State 8

    6 line: timecode . instruction

    ID  shift, and go to state 4

    instruction  go to state 14
    opcode       go to state 9
    identifier   go to state 15


State 9

    9 instruction: opcode . ';'
   10            | opcode . operands ';'

    ID        shift, and go to state 4
    INT       shift, and go to state 5
    CHANNEL   shift, and go to state 16
    REGISTER  shift, and go to state 17
    ';'       shift, and go to state 18
    '('       shift, and go to state 19

    operands    go to state 20
    operand     go to state 21
    lvalue      go to state 22
    channel     go to state 23
    register    go to state 24
    value       go to state 25
    integer     go to state 26
    identifier  go to state 27


State 10

   11 timecode: integer .

    $default  reduce using rule 11 (timecode)


State 11

    3 line: identifier . ':'
    4     | identifier . '=' integer
   21 opcode: identifier .

    ':'  shift, and go to state 28
    '='  shift, and go to state 29

    $default  reduce using rule 21 (opcode)


State 12

    7 line: error EOL .

    $default  reduce using rule 7 (line)


State 13

    8 line: line EOL .

    $default  reduce using rule 8 (line)


State 14

    6 line: timecode instruction .

    $default  reduce using rule 6 (line)


State 15

   21 opcode: identifier .

    $default  reduce using rule 21 (opcode)


State 16

   19 channel: CHANNEL . value

    ID   shift, and go to state 4
    INT  shift, and go to state 5

    value       go to state 30
    integer     go to state 26
    identifier  go to state 27


State 17

   20 register: REGISTER . value

    ID   shift, and go to state 4
    INT  shift, and go to state 5

    value       go to state 31
    integer     go to state 26
    identifier  go to state 27


State 18

    9 instruction: opcode ';' .

    $default  reduce using rule 9 (instruction)


State 19

   18 lvalue: '(' . register ')'

    REGISTER  shift, and go to state 17

    register  go to state 32


State 20

   10 instruction: opcode operands . ';'

    ';'  shift, and go to state 33


State 21

   13 operands: operand .

    $default  reduce using rule 13 (operands)


State 22

   12 operands: lvalue . ',' operand
   15 operand: lvalue .

    ','  shift, and go to state 34

    $default  reduce using rule 15 (operand)


State 23

   17 lvalue: channel .

    $default  reduce using rule 17 (lvalue)


State 24

   16 lvalue: register .

    $default  reduce using rule 16 (lvalue)


State 25

   14 operand: value .

    $default  reduce using rule 14 (operand)


State 26

   22 value: integer .

    $default  reduce using rule 22 (value)


State 27

   23 value: identifier .

    $default  reduce using rule 23 (value)


State 28

    3 line: identifier ':' .

    $default  reduce using rule 3 (line)


State 29

    4 line: identifier '=' . integer

    INT  shift, and go to state 5

    integer  go to state 35


State 30

   19 channel: CHANNEL value .

    $default  reduce using rule 19 (channel)


State 31

   20 register: REGISTER value .

    $default  reduce using rule 20 (register)


State 32

   18 lvalue: '(' register . ')'

    ')'  shift, and go to state 36


State 33

   10 instruction: opcode operands ';' .

    $default  reduce using rule 10 (instruction)


State 34

   12 operands: lvalue ',' . operand

    ID        shift, and go to state 4
    INT       shift, and go to state 5
    CHANNEL   shift, and go to state 16
    REGISTER  shift, and go to state 17
    '('       shift, and go to state 19

    operand     go to state 37
    lvalue      go to state 38
    channel     go to state 23
    register    go to state 24
    value       go to state 25
    integer     go to state 26
    identifier  go to state 27


State 35

    4 line: identifier '=' integer .

    $default  reduce using rule 4 (line)


State 36

   18 lvalue: '(' register ')' .

    $default  reduce using rule 18 (lvalue)


State 37

   12 operands: lvalue ',' operand .

    $default  reduce using rule 12 (operands)


State 38

   15 operand: lvalue .

    $default  reduce using rule 15 (operand)
